@page "/"
@page "/login"
@using CarRental.Controllers.EmployeeModule
@using CarRental.Domain.EmployeeModule
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Car Rental - Login</PageTitle>

<div class="container-fluid d-flex align-items-center justify-content-center min-vh-100">
    <div class="card" style="width: 400px;">
        <div class="card-header bg-primary text-white text-center">
            <h3><i class="fas fa-car"></i> Car Rental System</h3>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @errorMessage
                </div>
            }
            
            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="loginModel.Username" placeholder="Enter username" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Enter password" />
                </div>
                <button type="submit" class="btn btn-primary w-100" disabled="@isLoggingIn">
                    @if (isLoggingIn)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        <text>Signing in...</text>
                    }
                    else
                    {
                        <text>Sign In</text>
                    }
                </button>
            </EditForm>
            
            <div class="mt-3 text-center">
                <small class="text-muted">Default credentials: admin / admin</small>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = "";
    private bool isLoggingIn = false;
    private readonly EmployeeController controller = new();

    public class LoginModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }

    private async Task HandleLogin()
    {
        isLoggingIn = true;
        errorMessage = "";
        
        try
        {
            // Check admin credentials first
            if (loginModel.Username == "admin" && loginModel.Password == "admin")
            {
                await PerformLogin();
                return;
            }
            
            // Check employee credentials
            try
            {
                var employees = controller.SelectAll();
                foreach (var employee in employees)
                {
                    if (loginModel.Username == employee.LoginUsername && loginModel.Password == employee.UserPassword)
                    {
                        await PerformLogin();
                        return;
                    }
                }
            }
            catch (Exception ex)
            {
                // If database is not available, allow admin login for demo purposes
                if (loginModel.Username == "admin" && loginModel.Password == "admin")
                {
                    await PerformLogin();
                    return;
                }
                Console.WriteLine($"Database error: {ex.Message}");
            }
            
            // Invalid credentials
            errorMessage = "Invalid username or password";
            loginModel.Username = "";
            loginModel.Password = "";
        }
        finally
        {
            isLoggingIn = false;
        }
    }

    private async Task PerformLogin()
    {
        // Simulate login delay
        await Task.Delay(500);
        
        // Navigate to dashboard
        Navigation.NavigateTo("/dashboard");
    }
}